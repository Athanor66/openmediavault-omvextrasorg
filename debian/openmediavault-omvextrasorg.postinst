#!/bin/sh
#
# This file is part of OpenMediaVault-omvextrasorg.
#
# @license   http://www.gnu.org/licenses/gpl.html GPL Version 3
# @author   Aaron Murray <aaron@omv-extras.org>
#           Marcel Beck <marcel.beck@mbeck.org>
# @copyright Copyright (c)  2013 Aaron Murray
#                           2011-2012 Marcel Beck
#
# OpenMediaVault is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# OpenMediaVault is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with OpenMediaVault. If not, see <http://www.gnu.org/licenses/>.

set -e

. /etc/default/openmediavault
. /usr/share/openmediavault/scripts/helper-functions

OMVEXTRASREPOFILE="/etc/apt/sources.list.d/omv-extras-org-sardaukar.list"

ARM=false
ARCH="`/bin/uname -m`"

case "$ARCH" in
    *arm*)
        ARM=true
    ;;
esac

case "$1" in
    configure)

        ########################################################################
        #  Update the configuration.
        #   <config>
        #       <system>
        #           <omvextrasogr>
        #               <enable>1</enable>
        #               <testing>0</testing>
        #               <vbox>1</vbox>
        #               <plex>0</plex>
        #               <greyhole>0</greyhole>
        #               <vdr>0</vdr>
        #               <dotdeb>0</dotdeb>
        #               <debmm>0</debmm>
        #               <debmmbp>0</debmmbp>
        #           </omvextrasorg>
        #       </system>
        #   </config>
        ########################################################################

        echo "Initialize configuration"

        if ! omv_config_exists "/config/system/omvextrasorg"; then
            ENABLE="1"
            TESTING="0"
            VBOX="1"
            PLEX="0"
            GREYHOLE="0"
            VDR="0"
            DOTDEB="0"
            DEBMM="0"
            DEBMMBP="0"
        else
            echo "Importing previous configuration"
            ENABLE="$(omv_config_get "/config/system/omvextrasorg/enable")"
            TESTING="$(omv_config_get "/config/system/omvextrasorg/testing")"
            VBOX="$(omv_config_get "/config/system/omvextrasorg/vbox")"
            PLEX="$(omv_config_get "/config/system/omvextrasorg/plex")"
            GREYHOLE="$(omv_config_get "/config/system/omvextrasorg/greyhole")"
            VDR="$(omv_config_get "/config/system/omvextrasorg/vdr")"
            DOTDEB="$(omv_config_get "/config/system/omvextrasorg/dotdeb")"
            DEBMM="$(omv_config_get "/config/system/omvextrasorg/debmm")"
            DEBMMBP="$(omv_config_get "/config/system/omvextrasorg/debmmbp")"
        fi

        if $ARM; then
            VBOX="0"
            PLEX="0"
            GREYHOLE="0"
            VDR="0"
        fi

        omv_config_delete "/config/system/omvextrasorg"

        object="<enable>${ENABLE}</enable>"
        object="${object}<testing>${TESTING}</testing>"
        object="${object}<vbox>${VBOX}</vbox>"
        object="${object}<plex>${PLEX}</plex>"
        object="${object}<greyhole>${GREYHOLE}</greyhole>"
        object="${object}<vdr>${PLEX}</vdr>"
        object="${object}<dotdeb>${DOTDEB}</dotdeb>"
        object="${object}<debmm>${DEBMM}</debmm>"
        object="${object}<debmmbp>${DEBMMBP}</debmmbp>"

        omv_config_add_element "/config/system" "omvextrasorg" "${object}" true

        /bin/rm -f ${OMVEXTRASREPOFILE}
        /bin/rm -f /etc/apt/sources.list.d/omv-extras-org-*.list
        /bin/rm -f /etc/apt/sources.list.d/virtualbox.list
        /bin/rm -f /etc/apt/sources.list.d/plexmediaserver.list
        /bin/rm -f /etc/apt/sources.list.d/greyhole.list
        /bin/rm -f /etc/apt/sources.list.d/dotdeb.list
        /bin/rm -f /etc/apt/sources.list.d/deb-multimedia.list
        /bin/rm -f /etc/apt/sources.list.d/deb-multimedia-backports.list

        if [ "$ENABLE" = "1" ]; then
            echo '# Regular omv-extras.org repo' >> ${OMVEXTRASREPOFILE}
            echo 'deb http://packages.omv-extras.org/debian/ sardaukar main' > ${OMVEXTRASREPOFILE}
        fi

        if [ "$TESTING" = "1" ]; then
            echo '# Testing omv-extras.org repo' >> ${OMVEXTRASREPOFILE}
            echo 'deb http://packages.omv-extras.org/debian/ sardaukar-testing main' >> ${OMVEXTRASREPOFILE}
        fi

        if [ "$VBOX" = "1" ]; then
            echo '# Virtualbox repo' >> ${OMVEXTRASREPOFILE}
            echo 'deb http://packages.omv-extras.org/debian/ sardaukar-vb main' >> ${OMVEXTRASREPOFILE}
            echo 'deb http://download.virtualbox.org/virtualbox/debian squeeze contrib non-free' >> ${OMVEXTRASREPOFILE}
        fi

        if [ "$PLEX" = "1" ]; then
            echo '# Plexmediaserver repo' >> ${OMVEXTRASREPOFILE}
            echo 'deb http://packages.omv-extras.org/debian/ sardaukar-plex main' >> ${OMVEXTRASREPOFILE}
            echo 'deb http://shell.ninthgate.se/packages/debian squeeze main' >> ${OMVEXTRASREPOFILE}
        fi

        if [ "$GREYHOLE" = "1" ]; then
            echo '# Greyhole repo' >> ${OMVEXTRASREPOFILE}
            echo 'deb http://packages.omv-extras.org/debian/ sardaukar-greyhole main' >> ${OMVEXTRASREPOFILE}
            echo 'deb http://www.greyhole.net/releases/deb stable main' >> ${OMVEXTRASREPOFILE}
        fi

        if [ "$VDR" = "1" ]; then
            echo '# VDR repo' >> ${OMVEXTRASREPOFILE}
            echo 'deb http://packages.omv-extras.org/debian/ sardaukar-vdr main' >> ${OMVEXTRASREPOFILE}
            echo 'deb http://e-tobi.net/vdr-experimental/ squeeze addons vdr-multipatch' >> ${OMVEXTRASREPOFILE}
        fi

        if [ "$DOTDEB" = "1" ]; then
            echo '# Dotdeb experimental repo' >> ${OMVEXTRASREPOFILE}
            echo 'deb http://packages.omv-extras.org/debian/ sardaukar-dotdeb main' >> ${OMVEXTRASREPOFILE}
            echo 'deb http://packages.dotdeb.org squeeze all' >> ${OMVEXTRASREPOFILE}
            echo 'deb-src http://packages.dotdeb.org squeeze all' >> ${OMVEXTRASREPOFILE}
            echo 'deb http://packages.dotdeb.org squeeze-php54 all' >> ${OMVEXTRASREPOFILE}
            echo 'deb-src http://packages.dotdeb.org squeeze-php54 all' >> ${OMVEXTRASREPOFILE}
        fi

        if [ "$DEBMMBP" = "1" ]; then
            echo '# Deb-multimedia backports repo' >> ${OMVEXTRASREPOFILE}
            echo 'deb http://www.deb-multimedia.org squeeze main non-free' > ${OMVEXTRASREPOFILE}
            echo 'deb http://www.deb-multimedia.org squeeze-backports main' >> ${OMVEXTRASREPOFILE}
        else
            if [ "$DEBMM" = "1" ]; then
                echo '# Deb-multimedia repo' >> ${OMVEXTRASREPOFILE}
                echo 'deb http://www.deb-multimedia.org squeeze main' > ${OMVEXTRASREPOFILE}
            fi
        fi

        if [ -x /usr/bin/apt-key ]; then
            apt-key add /usr/share/keyrings/omvextrasorg-keyring.gpg
            apt-key add /usr/share/keyrings/oracle_vbox.asc
            apt-key add /usr/share/keyrings/shell-ninthgate-se-keyring.key
            apt-key add /usr/share/keyrings/dotdeb.gpg
            apt-key add /usr/share/keyrings/deb-multimedia-keyring.gpg
            apt-key add /usr/share/keyrings/greyhole-debsig.asc
            apt-key add /usr/share/keyrings/e-tobi-keyring.gpg
        fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

exit 0
