#!/bin/sh
#
# @license   http://www.gnu.org/licenses/gpl.html GPL Version 3
# @author    OpenMediaVault Plugin Developers <plugins@omv-extras.org>
#            Marcel Beck <marcel.beck@mbeck.org>
# @copyright Copyright (c)  2013-2014 OpenMediaVault Plugin Developers
#                           2011-2012 Marcel Beck
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

set -e

. /etc/default/openmediavault
. /usr/share/openmediavault/scripts/helper-functions

SERVICE_XPATH_NAME="omvextrasorg"
SERVICE_XPATH="/config/system/${SERVICE_XPATH_NAME}"
KEYRING_LOCATION="/usr/share/keyrings/"
OMV_UPGRADE_SCRIPTS_DIR=${OMV_UPGRADE_SCRIPTS_DIR:-"/usr/share/openmediavault/releaseupgrade"}
OMVEXTRAS_PRE_UNLOCK_SCRIPT=${OMV_UPGRADE_SCRIPTS_DIR}/pre.d/19-unlock-apt-sources
OMVEXTRAS_PRE_UPGRADE_SCRIPT=${OMV_UPGRADE_SCRIPTS_DIR}/pre.d/21-update-omvextrasorg
OMVVERSION=$(xmlstarlet sel -t -v "//distribution" ${OMV_PRODUCTINFO_FILE} | xmlstarlet unesc)

case "$1" in
    configure)

        if ! omv_config_exists "${SERVICE_XPATH}"; then
            echo "Initialize configuration"
            object="<enable>1</enable>"
            object="${object}<testing>0</testing>"
            object="${object}<developer>n/a</developer>"
            object="${object}<vbox>0</vbox>"
            object="${object}<plex>0</plex>"
            object="${object}<greyhole>0</greyhole>"
            object="${object}<vdr>0</vdr>"
            object="${object}<miller>0</miller>"
            object="${object}<millertesting>0</millertesting>"
            object="${object}<btsync>0</btsync>"
            object="${object}<beta>0</beta>"
            object="${object}<dotdeb>0</dotdeb>"
            object="${object}<debmm>0</debmm>"
            object="${object}<debmmbp>0</debmmbp>"
            omv_config_add_element "/config/system" "${SERVICE_XPATH_NAME}" "${object}" true
        fi

        if ! omv_config_exists "${SERVICE_XPATH}/repos"; then
            omv_config_add_element "${SERVICE_XPATH}" "repos" ""
        fi

        if ! omv_config_exists "${SERVICE_XPATH}/mariadb"; then
            omv_config_add_element "${SERVICE_XPATH}" "mariadb" "0"
        fi

        if ! omv_config_exists "${SERVICE_XPATH}/vpn"; then
            omv_config_add_element "${SERVICE_XPATH}" "vpn" "0"
        fi

        omv-mkconf omvextrasorg

        if [ -x /usr/bin/apt-key ]; then
            apt-key add ${KEYRING_LOCATION}omvextrasorg-keyring.gpg
            apt-key add ${KEYRING_LOCATION}oracle_vbox.asc
            apt-key add ${KEYRING_LOCATION}shell-ninthgate-se-keyring.key
            apt-key add ${KEYRING_LOCATION}dotdeb.gpg
            apt-key add ${KEYRING_LOCATION}deb-multimedia-keyring.gpg
            apt-key add ${KEYRING_LOCATION}greyhole-debsig.asc
            apt-key add ${KEYRING_LOCATION}e-tobi-keyring.gpg
            apt-key add ${KEYRING_LOCATION}btsync.gpg
            apt-key add ${KEYRING_LOCATION}mariadb.key
        fi

        chattr +i /etc/apt/sources.list

        dpkg-trigger update-fixperms
        dpkg-trigger update-locale

        # Create pre-upgrade script if installing on sardaukar
        if [ "${OMVVERSION}" = "sardaukar" ]; then
            cat <<EOF > ${OMVEXTRAS_PRE_UNLOCK_SCRIPT}
#!/bin/sh
set -e

. /etc/default/openmediavault

chattr -i /etc/apt/sources.list

exit 0
EOF

            chmod +x ${OMVEXTRAS_PRE_UNLOCK_SCRIPT}

            cat <<EOF > ${OMVEXTRAS_PRE_UPGRADE_SCRIPT}
#!/bin/sh
set -e

. /etc/default/openmediavault

omv-mkconf omvextrasorg upgrade

exit 0
EOF

            chmod +x ${OMVEXTRAS_PRE_UPGRADE_SCRIPT}
        fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

exit 0
