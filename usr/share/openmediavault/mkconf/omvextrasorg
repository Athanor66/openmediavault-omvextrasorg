#!/bin/sh
#
# @license   http://www.gnu.org/licenses/gpl.html GPL Version 3
# @author    Volker Theile <volker.theile@openmediavault.org>
# @author    OpenMediaVault Plugin Developers <plugins@omv-extras.org>
# @copyright Copyright (c) 2009-2013 Volker Theile
# @copyright Copyright (c) 2013-2014 OpenMediaVault Plugin Developers
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

set -e

. /etc/default/openmediavault
. /usr/share/openmediavault/scripts/helper-functions

if [ "$2" = "upgrade" ]; then
  OMVVERSION="kralizec"
  RELEASE="wheezy"
else
  OMVVERSION=$(xmlstarlet sel -t -v "//distribution" ${OMV_PRODUCTINFO_FILE} | xmlstarlet unesc)
  RELEASE=$(lsb_release -cs)
fi

OMVEXTRASREPOFILE="/etc/apt/sources.list.d/omv-extras-org-${OMVVERSION}.list"
OMVEXTRASCUSTOMREPOFILE="/etc/apt/sources.list.d/omv-extras-org-custom.list"
OMVEXTRASAPTPREFS="/etc/apt/preferences.d/99omv-extras-org"

REPO_LOCATION="packages.omv-extras.org"
REPO_URL="http://${REPO_LOCATION}/debian/"

DH2K_REPO_LOCATION="dh2k.omv-extras.org"
DH2K_REPO_URL="http://${DH2K_REPO_LOCATION}/debian/"

XPATH="//system/omvextrasorg/"
XPATH_REPO="${XPATH}repos/repo"

/bin/rm -f ${OMVEXTRASREPOFILE}
/bin/rm -f ${OMVEXTRASCUSTOMREPOFILE}
/bin/rm -f ${OMVEXTRASAPTPREFS}
/bin/rm -f /etc/apt/sources.list.d/omv-extras-org-*.list

echo "# This is file is generated." > ${OMVEXTRASCUSTOMREPOFILE}
touch ${OMVEXTRASAPTPREFS}

# omv-extras stable
if [ "$(omv_config_get "${XPATH}enable")" = "1" ]; then
echo "# Regular omv-extras.org repo" >> ${OMVEXTRASREPOFILE}
echo "deb ${REPO_URL} ${OMVVERSION} main" >> ${OMVEXTRASREPOFILE}
cat <<EOF >> ${OMVEXTRASAPTPREFS}
Package: *
Pin: release n=${OMVVERSION}, origin ${REPO_LOCATION}
Pin-Priority: 995

EOF
fi

# omv-extras testing
if [ "$(omv_config_get "${XPATH}testing")" = "1" ]; then
echo "# Testing omv-extras.org repo" >> ${OMVEXTRASREPOFILE}
echo "deb ${REPO_URL} ${OMVVERSION}-testing main" >> ${OMVEXTRASREPOFILE}
cat <<EOF >> ${OMVEXTRASAPTPREFS}
Package: *
Pin: release n=${OMVVERSION}-testing, origin ${REPO_LOCATION}
Pin-Priority: 996

EOF
fi

# omv-extras virtualbox
if [ "$(omv_config_get "${XPATH}vbox")" = "1" ]; then
echo "# Virtualbox repo" >> ${OMVEXTRASREPOFILE}
echo "deb ${REPO_URL} ${OMVVERSION}-vb main" >> ${OMVEXTRASREPOFILE}
echo "deb http://download.virtualbox.org/virtualbox/debian ${RELEASE} contrib non-free" >> ${OMVEXTRASREPOFILE}
cat <<EOF >> ${OMVEXTRASAPTPREFS}
Package: *
Pin: release n=${OMVVERSION}-vb, origin ${REPO_LOCATION}
Pin-Priority: 995

EOF
fi

# omv-extras plexmediaserver
if [ "$(omv_config_get "${XPATH}plex")" = "1" ]; then
echo "# Plexmediaserver repo" >> ${OMVEXTRASREPOFILE}
echo "deb ${REPO_URL} ${OMVVERSION}-plex main" >> ${OMVEXTRASREPOFILE}
echo "deb http://shell.ninthgate.se/packages/debian ${RELEASE} main" >> ${OMVEXTRASREPOFILE}
cat <<EOF >> ${OMVEXTRASAPTPREFS}
Package: *
Pin: release n=${OMVVERSION}-plex, origin ${REPO_LOCATION}
Pin-Priority: 995

EOF
fi

# omv-extras greyhole
if [ "$(omv_config_get "${XPATH}greyhole")" = "1" ]; then
echo "# Greyhole repo" >> ${OMVEXTRASREPOFILE}
echo "deb ${REPO_URL} ${OMVVERSION}-greyhole main" >> ${OMVEXTRASREPOFILE}
echo "deb http://www.greyhole.net/releases/deb stable main" >> ${OMVEXTRASREPOFILE}
cat <<EOF >> ${OMVEXTRASAPTPREFS}
Package: *
Pin: release n=${OMVVERSION}-greyhole, origin ${REPO_LOCATION}
Pin-Priority: 995

EOF
fi

# omv-extras vdr
if [ "$(omv_config_get "${XPATH}vdr")" = "1" ]; then
echo "# VDR repo" >> ${OMVEXTRASREPOFILE}
echo "deb ${REPO_URL} ${OMVVERSION}-vdr main" >> ${OMVEXTRASREPOFILE}
echo "deb http://e-tobi.net/vdr-experimental/ ${RELEASE} addons base vdr-multipatch" >> ${OMVEXTRASREPOFILE}
cat <<EOF >> ${OMVEXTRASAPTPREFS}
Package: *
Pin: release n=${OMVVERSION}-vdr, origin ${REPO_LOCATION}
Pin-Priority: 995

Package: *
Pin: release o=e-tobi.net
Pin-Priority: 995

EOF
fi

# omv-extras miller
if [ "$(omv_config_get "${XPATH}miller")" = "1" ]; then
echo "# miller repo" >> ${OMVEXTRASREPOFILE}
echo "deb ${DH2K_REPO_URL} ${OMVVERSION}-miller main" >> ${OMVEXTRASREPOFILE}
cat <<EOF >> ${OMVEXTRASAPTPREFS}
Package: *
Pin: release n=${OMVVERSION}-miller, origin ${DH2K_REPO_LOCATION}
Pin-Priority: 995

EOF
fi

# omv-extras miller-testing
if [ "$(omv_config_get "${XPATH}millertesting")" = "1" ]; then
echo "# miller testing repo" >> ${OMVEXTRASREPOFILE}
echo "deb ${DH2K_REPO_URL} ${OMVVERSION}-miller-testing main" >> ${OMVEXTRASREPOFILE}
cat <<EOF >> ${OMVEXTRASAPTPREFS}
Package: *
Pin: release n=${OMVVERSION}-miller-testing, origin ${DH2K_REPO_LOCATION}
Pin-Priority: 995

EOF
fi

# omv-extras btsync
if [ "$(omv_config_get "${XPATH}btsync")" = "1" ]; then
echo "# btsync repo" >> ${OMVEXTRASREPOFILE}
echo "deb ${REPO_URL} ${OMVVERSION}-btsync main" >> ${OMVEXTRASREPOFILE}
echo "deb http://debian.yeasoft.net/btsync ${RELEASE} main" >> ${OMVEXTRASREPOFILE}
cat <<EOF >> ${OMVEXTRASAPTPREFS}
Package: *
Pin: release n=${OMVVERSION}-btsync, origin ${REPO_LOCATION}
Pin-Priority: 995

Package: *
Pin: release n=${RELEASE}, origin debian.yeasoft.net
Pin-Priority: 995

EOF
fi

# omv-extras vpn
if [ "$(omv_config_get "${XPATH}vpn")" = "1" ]; then
echo "# VPN repo" >> ${OMVEXTRASREPOFILE}
echo "deb ${DH2K_REPO_URL} ${OMVVERSION}-vpn main" >> ${OMVEXTRASREPOFILE}
cat <<EOF >> ${OMVEXTRASAPTPREFS}
Package: *
Pin: release n=${OMVVERSION}-vpn, origin ${DH2K_REPO_LOCATION}
Pin-Priority: 995

EOF
fi

# omv-extras developer/beta
if [ "$(omv_config_get "${XPATH}beta")" = "1" ]; then
echo "# Beta repo" >> ${OMVEXTRASREPOFILE}
echo "deb ${REPO_URL} ${OMVVERSION}-beta main" >> ${OMVEXTRASREPOFILE}
cat <<EOF >> ${OMVEXTRASAPTPREFS}
Package: *
Pin: release n=${OMVVERSION}-beta, origin ${REPO_LOCATION}
Pin-Priority: 995

EOF
fi

# omv-extras dotdeb
if [ "$(omv_config_get "${XPATH}dotdeb")" = "1" ]; then
echo "# Dotdeb experimental repo" >> ${OMVEXTRASREPOFILE}
echo "deb ${REPO_URL} ${OMVVERSION}-dotdeb main" >> ${OMVEXTRASREPOFILE}
echo "deb http://packages.dotdeb.org ${RELEASE} all" >> ${OMVEXTRASREPOFILE}
echo "deb-src http://packages.dotdeb.org ${RELEASE} all" >> ${OMVEXTRASREPOFILE}

if [ "${OMVVERSION}" = "sardaukar" ]; then
  php="php54"
else
  php="php55"
fi

echo "deb http://packages.dotdeb.org ${RELEASE}-${php} all" >> ${OMVEXTRASREPOFILE}
echo "deb-src http://packages.dotdeb.org ${RELEASE}-${php} all" >> ${OMVEXTRASREPOFILE}

cat <<EOF >> ${OMVEXTRASAPTPREFS}
Package: *
Pin: release n=${OMVVERSION}-dotdeb, origin ${REPO_LOCATION}
Pin-Priority: 996

Package: *
Pin: release n=${RELEASE}, origin packages.dotdeb.org
Pin-Priority: 996

Package: *
Pin: release n=${RELEASE}-${php}, origin packages.dotdeb.org
Pin-Priority: 996

EOF
fi

# omv-extras deb-multimedia
if [ "$(omv_config_get "${XPATH}debmmbp")" = "1" ]; then
echo "# Deb-multimedia backports repo" >> ${OMVEXTRASREPOFILE}
echo "deb http://www.deb-multimedia.org ${RELEASE} main non-free" >> ${OMVEXTRASREPOFILE}
echo "deb http://www.deb-multimedia.org ${RELEASE}-backports main" >> ${OMVEXTRASREPOFILE}
else
if [ "$(omv_config_get "${XPATH}debmm")" = "1" ]; then
echo "# Deb-multimedia repo" >> ${OMVEXTRASREPOFILE}
echo "deb http://www.deb-multimedia.org ${RELEASE} main" >> ${OMVEXTRASREPOFILE}
fi
fi

if [ "$(omv_config_get "${XPATH}mariadb")" = "1" ]; then
echo "# MariaDB repo" >> ${OMVEXTRASREPOFILE}
echo "deb http://ftp.osuosl.org/pub/mariadb/repo/10.0/debian ${RELEASE} main" >> ${OMVEXTRASREPOFILE}
echo "deb-src http://ftp.osuosl.org/pub/mariadb/repo/10.0/debian ${RELEASE} main" >> ${OMVEXTRASREPOFILE}
fi

# omv-extras zfs
if [ "$(omv_config_get "${XPATH}zfs")" = "1" ]; then
echo "# ZFS repo" >> ${OMVEXTRASREPOFILE}
echo "deb ${REPO_URL} ${OMVVERSION}-zfs main" >> ${OMVEXTRASREPOFILE}
echo "deb http://archive.zfsonlinux.org/debian ${RELEASE} main" >> ${OMVEXTRASREPOFILE}
cat <<EOF >> ${OMVEXTRASAPTPREFS}
Package: *
Pin: release o=archive.zfsonlinux.org
Pin-Priority: 1001

EOF
fi

cat <<EOF >> ${OMVEXTRASAPTPREFS}
Package: *
Pin: release n=${OMVVERSION}-backports, origin ${REPO_LOCATION}
Pin-Priority: 995

EOF

# Process custom repos
echo "# Custom repos" > ${OMVEXTRASCUSTOMREPOFILE}
count=$(omv_config_get_count "${XPATH_REPO}")
index=0
while [ ${index} -le ${count} ]; do
  name=$(omv_config_get "${XPATH_REPO}[position()=${index}]/name")
  repo=$(omv_config_get "${XPATH_REPO}[position()=${index}]/repo")

  if [ "${repo}" != "" ]; then
    echo "# ${name}" >> ${OMVEXTRASCUSTOMREPOFILE}
    echo "${repo}" >> ${OMVEXTRASCUSTOMREPOFILE}
  fi

  index=$(( ${index} + 1 ))
done
