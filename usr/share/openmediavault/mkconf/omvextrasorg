#!/bin/sh
#
# @license   http://www.gnu.org/licenses/gpl.html GPL Version 3
# @author    Aaron Murray <aaron@omv-extras.org>
# @copyright Copyright (c) 2013-2014 Aaron Murray
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

set -e

. /etc/default/openmediavault
. /usr/share/openmediavault/scripts/helper-functions

OMVVERSION="kralizec"
OMVEXTRASREPOFILE="/etc/apt/sources.list.d/omv-extras-org-${OMVVERSION}.list"
OMVEXTRASCUSTOMREPOFILE="/etc/apt/sources.list.d/omv-extras-org-custom.list"
RELEASE=$(lsb_release -cs)

/bin/rm -f ${OMVEXTRASREPOFILE}
/bin/rm -f /etc/apt/sources.list.d/omv-extras-org-*.list

if [ "$(omv_config_get "//system/omvextrasorg/enable")" = "1" ]; then
    echo "# Regular omv-extras.org repo" > ${OMVEXTRASREPOFILE}
    echo "deb http://packages.omv-extras.org/debian/ ${OMVVERSION} main" >> ${OMVEXTRASREPOFILE}
fi

if [ "$(omv_config_get "//system/omvextrasorg/testing")" = "1" ]; then
    echo "# Testing omv-extras.org repo" >> ${OMVEXTRASREPOFILE}
    echo "deb http://packages.omv-extras.org/debian/ ${OMVVERSION}-testing main" >> ${OMVEXTRASREPOFILE}
fi

if [ "$(omv_config_get "//system/omvextrasorg/vbox")" = "1" ]; then
    echo "# Virtualbox repo" >> ${OMVEXTRASREPOFILE}
    echo "deb http://packages.omv-extras.org/debian/ ${OMVVERSION}-vb main" >> ${OMVEXTRASREPOFILE}
    echo "deb http://download.virtualbox.org/virtualbox/debian ${RELEASE} contrib non-free" >> ${OMVEXTRASREPOFILE}
fi

if [ "$(omv_config_get "//system/omvextrasorg/plex")" = "1" ]; then
    echo "# Plexmediaserver repo" >> ${OMVEXTRASREPOFILE}
    echo "deb http://packages.omv-extras.org/debian/ ${OMVVERSION}-plex main" >> ${OMVEXTRASREPOFILE}
    echo "deb http://shell.ninthgate.se/packages/debian ${RELEASE} main" >> ${OMVEXTRASREPOFILE}
fi

if [ "$(omv_config_get "//system/omvextrasorg/greyhole")" = "1" ]; then
    echo "# Greyhole repo" >> ${OMVEXTRASREPOFILE}
    echo "deb http://packages.omv-extras.org/debian/ ${OMVVERSION}-greyhole main" >> ${OMVEXTRASREPOFILE}
    echo "deb http://www.greyhole.net/releases/deb stable main" >> ${OMVEXTRASREPOFILE}
fi

if [ "$(omv_config_get "//system/omvextrasorg/vdr")" = "1" ]; then
    echo "# VDR repo" >> ${OMVEXTRASREPOFILE}
    echo "deb http://packages.omv-extras.org/debian/ ${OMVVERSION}-vdr main" >> ${OMVEXTRASREPOFILE}
    echo "deb http://e-tobi.net/vdr-experimental/ ${RELEASE} addons vdr-multipatch" >> ${OMVEXTRASREPOFILE}
fi

if [ "$(omv_config_get "//system/omvextrasorg/miller")" = "1" ]; then
    echo "# miller repo" >> ${OMVEXTRASREPOFILE}
    echo "deb http://dh2k.omv-extras.org/debian/ ${OMVVERSION}-miller main" >> ${OMVEXTRASREPOFILE}
fi

if [ "$(omv_config_get "//system/omvextrasorg/millertesting")" = "1" ]; then
    echo "# miller testing repo" >> ${OMVEXTRASREPOFILE}
    echo "deb http://dh2k.omv-extras.org/debian/ ${OMVVERSION}-miller-testing main" >> ${OMVEXTRASREPOFILE}
fi

if [ "$(omv_config_get "//system/omvextrasorg/btsync")" = "1" ]; then
    echo "# btsync repo" >> ${OMVEXTRASREPOFILE}
    echo "deb http://packages.omv-extras.org/debian/ ${OMVVERSION}-btsync main" >> ${OMVEXTRASREPOFILE}
    echo "deb http://debian.yeasoft.net/btsync ${RELEASE} main" >> ${OMVEXTRASREPOFILE}
fi

if [ "$(omv_config_get "//system/omvextrasorg/beta")" = "1" ]; then
    echo "# Beta repo" >> ${OMVEXTRASREPOFILE}
    echo "deb http://packages.omv-extras.org/debian/ ${OMVVERSION}-beta main" >> ${OMVEXTRASREPOFILE}
fi

if [ "$(omv_config_get "//system/omvextrasorg/dotdeb")" = "1" ]; then
    echo "# Dotdeb experimental repo" >> ${OMVEXTRASREPOFILE}
    echo "deb http://packages.omv-extras.org/debian/ ${OMVVERSION}-dotdeb main" >> ${OMVEXTRASREPOFILE}
    echo "deb http://packages.dotdeb.org ${RELEASE} all" >> ${OMVEXTRASREPOFILE}
    echo "deb-src http://packages.dotdeb.org ${RELEASE} all" >> ${OMVEXTRASREPOFILE}
    echo "deb http://packages.dotdeb.org ${RELEASE}-php55 all" >> ${OMVEXTRASREPOFILE}
    echo "deb-src http://packages.dotdeb.org ${RELEASE}-php55 all" >> ${OMVEXTRASREPOFILE}
fi

if [ "$(omv_config_get "//system/omvextrasorg/debmmbp")" = "1" ]; then
    echo "# Deb-multimedia backports repo" >> ${OMVEXTRASREPOFILE}
    echo "deb http://www.deb-multimedia.org ${RELEASE} main non-free" >> ${OMVEXTRASREPOFILE}
    echo "deb http://www.deb-multimedia.org ${RELEASE}-backports main" >> ${OMVEXTRASREPOFILE}
else
    if [ "$(omv_config_get "//system/omvextrasorg/debmm")" = "1" ]; then
        echo "# Deb-multimedia repo" >> ${OMVEXTRASREPOFILE}
        echo "deb http://www.deb-multimedia.org ${RELEASE} main" >> ${OMVEXTRASREPOFILE}
    fi
fi

# Process repos
echo "# Custom repos" > ${OMVEXTRASCUSTOMREPOFILE}
count=$(omv_config_get_count "//system/omvextrasorg/repos/repo")
index=0
while [ ${index} -le ${count} ]; do

    name=$(omv_config_get "//system/omvextrasorg/repos/repo[position()=${index}]/name")
    repo=$(omv_config_get "//system/omvextrasorg/repos/repo[position()=${index}]/repo")

    if [ "${repo}" != "" ]; then
        echo "# ${name}" >> ${OMVEXTRASCUSTOMREPOFILE}
        echo "${repo}" >> ${OMVEXTRASCUSTOMREPOFILE}
    fi

    index=$(( ${index} + 1 ))
done
