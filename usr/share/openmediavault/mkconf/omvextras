#!/bin/bash
#
# @license   http://www.gnu.org/licenses/gpl.html GPL Version 3
# @author    Volker Theile <volker.theile@openmediavault.org>
# @author    OpenMediaVault Plugin Developers <plugins@omv-extras.org>
# @copyright Copyright (c) 2009-2013 Volker Theile
# @copyright Copyright (c) 2013-2016 OpenMediaVault Plugin Developers
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

set -e

. /etc/default/openmediavault
. /usr/share/openmediavault/scripts/helper-functions

BACKPORTS_REPO="/etc/apt/sources.list.d/backports.list"
XPATH="/config/system/omvextras/repos/repo"

ISO_PATH="/boot"
GRUB_CLONEZILLA="/etc/grub.d/42_clonezilla"
CLONEZILLA_VERSION="2.4.5-23"
CLONEZILLA_ISO="clonezilla-live-${CLONEZILLA_VERSION}-i686-pae.iso"

GRUB_SYSRESCCD="/etc/grub.d/42_sysresccd"
SYSRESCCD_VERSION="4.7.2"
SYSRESCCD_ISO="systemrescuecd-x86-${SYSRESCCD_VERSION}.iso"

GRUB_GPARTEDLIVE="/etc/grub.d/42_gpartedlive"
GPARTEDLIVE_VERSION="0.26.0-2"
GPARTEDLIVE_ISO="gparted-live-${GPARTEDLIVE_VERSION}-i686.iso"

GRUB="/etc/default/grub"
GRUB_BACKUP="grub.bak"
GRUB_CFG="/boot/grub/grub.cfg"
TFILE="/tmp/grub"

conf=$2

update()
{
    export LANG=C
    export LC_ALL=C

    OMVEXTRASREPOFILE="/etc/apt/sources.list.d/omv-extras-org.list"
    OMVEXTRASAPTPREFS="/etc/apt/preferences.d/99omv-extras-org"

    KEYSERVER="hkp://keyserver.ubuntu.com:80"

    /bin/rm -f ${OMVEXTRASREPOFILE}
    /bin/rm -f ${OMVEXTRASAPTPREFS}
    /bin/rm -f /etc/apt/sources.list.d/omv-extras-org*.list

    cat <<EOF > ${OMVEXTRASAPTPREFS}
Package: *
Pin: release n=${OMVVERSION}-backports, origin ${BINTRAY_REPO_LOCATION}
Pin-Priority: 995

Package: virtualbox virtualbox-dkms virtualbox-qt minidlna
Pin: release a=jessie-backports
Pin-Priority: 500

EOF

    # Process repos
    echo "# This is file is generated." > ${OMVEXTRASREPOFILE}
    echo "# OMV-Extras repos" >> ${OMVEXTRASREPOFILE}

    count=$(omv_config_get_count "${XPATH}")
    index=0
    while [ ${index} -le ${count} ]; do
        enable=$(omv_config_get "${XPATH}[position()=${index}]/enable")
        name=$(omv_config_get "${XPATH}[position()=${index}]/name")

        if [ "${enable}" != "0" ]; then
            echo "# ${name}" >> ${OMVEXTRASREPOFILE}

            for i in `seq 1 3`;
            do
                repo=$(omv_config_get "${XPATH}[position()=${index}]/repo${i}")
                if [ "${repo}" != "" ]; then
                    key=$(omv_config_get "${XPATH}[position()=${index}]/key${i}")

                    if [[ ${repo} == deb* ]]; then
                        echo "${repo}" >> ${OMVEXTRASREPOFILE}
                    else
                        echo "deb ${repo}" >> ${OMVEXTRASREPOFILE}
                    fi

                    if [ "${key}" != "" ]; then
                        apt-key adv --keyserver ${KEYSERVER} --recv-keys "${key}"
                    fi

                    package=$(omv_config_get "${XPATH}[position()=${index}]/package${i}")
                    pin=$(omv_config_get "${XPATH}[position()=${index}]/pin${i}")
                    priority=$(omv_config_get "${XPATH}[position()=${index}]/priority${i}")

                    if [ "${package}" != "" ]; then
                        echo "Package: ${package}" >> ${OMVEXTRASAPTPREFS}
                        echo "Pin: ${pin}" >> ${OMVEXTRASAPTPREFS}
                        echo "Pin-Priority: ${priority}" >> ${OMVEXTRASAPTPREFS}
                        echo "" >> ${OMVEXTRASAPTPREFS}
                    fi

                fi
            done
        fi

        index=$(( ${index} + 1 ))
    done

    chmod 644 ${OMVEXTRASAPTPREFS}

    if [ -f "${BACKPORTS_REPO}" ]; then
        createBackportsFile
    fi
}

backports()
{
    export LANG=C
    export DEBIAN_FRONTEND=noninteractive

    ARCH="`/bin/uname -m`"
    package=""

    case "$ARCH" in
        *amd64*|*x86_64*)
            package="amd64"
        ;;
        *486*|*586*|*686*)
            package="586"
        ;;
    esac

    if [ -z ${package} ]; then
        echo "Unsupported kernel and/or processor"
    else
        createBackportsFile

        echo "Updating..."
        apt-get --quiet update > /dev/null 2>&1

        echo "Install backports 4.5 kernel and headers"
        apt-get -t jessie-backports --yes --force-yes --fix-missing install \
            linux-image-4.5.0-0.bpo.2-${package} \
            linux-headers-4.5.0-0.bpo.2-${package} \
            firmware-linux \
            firmware-linux-free

        disablesubmenu
        echo "..."
        echo "Please reboot to use new kernel"
    fi
}

createBackportsFile()
{
    echo "deb http://httpredir.debian.org/debian jessie-backports main contrib non-free" > $BACKPORTS_REPO
}

installclonezilla()
{
    if [ ! -f "${ISO_PATH}/${CLONEZILLA_ISO}" ]; then
        rm -f ${ISO_PATH}/clonezilla*.iso
        wget "https://downloads.sourceforge.net/project/clonezilla/clonezilla_live_stable/${CLONEZILLA_VERSION}/${CLONEZILLA_ISO}" -O ${ISO_PATH}/${CLONEZILLA_ISO}
    fi

    cat <<EOF > ${GRUB_CLONEZILLA}
#!/bin/sh
exec tail -n +3 \$0
menuentry 'Clonezilla Live' {
  set isofile="${ISO_PATH}/${CLONEZILLA_ISO}"
  loopback loop \$isofile
  linux (loop)/live/vmlinuz boot=live live-config noswap nolocales edd=on nomodeset ocs_live_run="ocs-live-general" ocs_live_extra_param="" keyboard-layouts="" ocs_live_batch="no" locales="" ocs_daemonon="ssh" vga=788 nosplash toram=filesystem.squashfs findiso=\$isofile
  initrd (loop)/live/initrd.img
}
EOF

    chmod 755 ${GRUB_CLONEZILLA}
    update-grub
}

installsysresccd()
{
    if [ ! -f "${ISO_PATH}/${SYSRESCCD_ISO}" ]; then
        rm -f ${ISO_PATH}/systemrescuecd*.iso
        wget "https://sourceforge.net/projects/systemrescuecd/files/sysresccd-x86/${SYSRESCCD_VERSION}/${SYSRESCCD_ISO}/download" -O ${ISO_PATH}/${SYSRESCCD_ISO}
    fi

    ARCH="`/bin/uname -m`"
    case "$ARCH" in
        x86_64)
            rescue="64"
        ;;
        *)
            rescue="32"
        ;;
    esac

    cat <<EOF > ${GRUB_SYSRESCCD}
#!/bin/sh
exec tail -n +3 \$0
menuentry 'SystemRescueCD' {
  set isofile="${ISO_PATH}/${SYSRESCCD_ISO}"
  loopback loop \$isofile
  linux (loop)/isolinux/rescue${rescue} nomodeset setkmap=us rootpass=openmediavault docache isoloop=\$isofile
  initrd (loop)/isolinux/initram.igz
}
EOF

    chmod 755 ${GRUB_SYSRESCCD}
    update-grub
}

installgpartedlive()
{
    if [ ! -f "${ISO_PATH}/${GPARTEDLIVE_ISO}" ]; then
        rm -f ${ISO_PATH}/gparted-live*.iso
        wget "https://downloads.sourceforge.net/gparted/${GPARTEDLIVE_ISO}" -O ${ISO_PATH}/${GPARTEDLIVE_ISO}
    fi

    cat <<EOF > ${GRUB_GPARTEDLIVE}
#!/bin/sh
exec tail -n +3 \$0
menuentry 'GParted Live' {
  set isofile="${ISO_PATH}/${GPARTEDLIVE_ISO}"
  loopback loop \$isofile
  linux (loop)/live/vmlinuz boot=live config union=aufs noswap noprompt nolocales edd=on gl_batch keyboard-layouts="" locales="" vga=788 ip=frommedia toram=filesystem.squashfs findiso=\$isofile
  initrd (loop)/live/initrd.img
}
EOF

    chmod 755 ${GRUB_GPARTEDLIVE}
    update-grub
}

rebootclonezilla()
{
    if [ ! -f "${ISO_PATH}/${CLONEZILLA_ISO}" ]; then
        echo "Please click on Install button."
    else
        NEW="GRUB_DEFAULT=saved"
        DEFAULT=$(cat ${GRUB} | grep GRUB_DEFAULT | cut -d= -f2)

        disablesubmenu

        if grep -q 'submenu' ${GRUB_CFG}; then
            ENTRY=$(cat ${GRUB_CFG} | grep '^menuentry ' | grep -n Clonezilla | cut -f1 -d:)
        else
            ENTRY=$(($(cat ${GRUB_CFG} | grep 'menuentry ' | grep -n Clonezilla | cut -f1 -d:)-1))
        fi

        echo "Configuring grub to boot once from Clonezilla iso...  ${ENTRY}"

        sed "s/GRUB_DEFAULT=.*/$NEW/g" ${GRUB} > ${TFILE}
        mv ${TFILE} ${GRUB}
        grub-set-default ${DEFAULT}
        update-grub
        grub-reboot ${ENTRY}
    fi
}

rebootsysresccd()
{
    if [ ! -f "${ISO_PATH}/${SYSRESCCD_ISO}" ]; then
        echo "Please click on Install button."
    else
        NEW="GRUB_DEFAULT=saved"
        DEFAULT=$(cat ${GRUB} | grep GRUB_DEFAULT | cut -d= -f2)

        disablesubmenu

        if grep -q 'submenu' ${GRUB_CFG}; then
            ENTRY=$(cat ${GRUB_CFG} | grep '^menuentry ' | grep -n SystemRescueCD | cut -f1 -d:)
        else
            ENTRY=$(($(cat ${GRUB_CFG} | grep 'menuentry ' | grep -n SystemRescueCD | cut -f1 -d:)-1))
        fi

        echo "Configuring grub to boot once from SystemRescueCD iso...  ${ENTRY}"

        sed "s/GRUB_DEFAULT=.*/$NEW/g" ${GRUB} > ${TFILE}
        mv ${TFILE} ${GRUB}
        grub-set-default ${DEFAULT}
        update-grub
        grub-reboot ${ENTRY}
    fi
}

rebootgpartedlive()
{
    if [ ! -f "${ISO_PATH}/${GPARTEDLIVE_ISO}" ]; then
        echo "Please click on Install button."
    else
        NEW="GRUB_DEFAULT=saved"
        DEFAULT=$(cat ${GRUB} | grep GRUB_DEFAULT | cut -d= -f2)

        disablesubmenu

        if grep -q 'submenu' ${GRUB_CFG}; then
            ENTRY=$(cat ${GRUB_CFG} | grep '^menuentry ' | grep -n GParted | cut -f1 -d:)
        else
            ENTRY=$(($(cat ${GRUB_CFG} | grep 'menuentry ' | grep -n GParted | cut -f1 -d:)-1))
        fi

        echo "Configuring grub to boot once from GParted Live iso...  ${ENTRY}"

        sed "s/GRUB_DEFAULT=.*/$NEW/g" ${GRUB} > ${TFILE}
        mv ${TFILE} ${GRUB}
        grub-set-default ${DEFAULT}
        update-grub
        grub-reboot ${ENTRY}
    fi
}

disablesubmenu()
{
    if ! grep -q 'GRUB_DISABLE_SUBMENU' ${GRUB}; then
        echo "GRUB_DISABLE_SUBMENU=y" >> ${GRUB}
        update-grub
    fi
}

case $2 in
    update)
        OMVVERSION="stoneburner"
        RELEASE="jessie"

        update
    ;;

    aptclean)
        update
        /usr/sbin/omv-aptclean
    ;;

    installbackports)
        backports
    ;;

    disablesubmenu)
        disablesubmenu
    ;;

    installcz)
        installclonezilla
    ;;

    installgp)
        installgpartedlive
    ;;

    installsys)
        installsysresccd
    ;;

    rebootcz)
        rebootclonezilla
    ;;

    rebootgp)
        rebootgpartedlive
    ;;

    rebootsys)
        installsysresccd
    ;;

    *)
        update
        case ${conf} in
            configure) ;;
            *)  apt-get update || : ;;
        esac

    ;;
esac

exit 0
